{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/TheaterScheduleProject-main/schedule-ui/src/components/profile/ProfileSettingsAccordion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Accordion, Form, Button, FormCheckbox } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfileSettingsAccordion({\n  userMe,\n  setModalOpen\n}) {\n  _s();\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const handleChangePassword = () => {\n    // Здесь добавьте код для отправки запроса на сервер для изменения пароля\n    // Используйте переменные oldPassword и newPassword для получения значений полей\n    console.log('Old Password:', oldPassword);\n    console.log('New Password:', newPassword);\n  };\n  const panels = [{\n    key: 'privacy',\n    title: 'Настройки приватности',\n    content: {\n      content: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(FormCheckbox, {\n            label: \"\\u041F\\u0440\\u0438\\u0441\\u044B\\u043B\\u0430\\u0442\\u044C \\u0443\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u044F \\u043F\\u043E Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setModalOpen(true),\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: setModalOpen && /*#__PURE__*/_jsxDEV(Form.Group, {\n            widths: \"equal\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              label: \"\\u0421\\u0442\\u0430\\u0440\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              type: \"password\",\n              value: oldPassword,\n              onChange: e => setOldPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              fluid: true,\n              label: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleChangePassword,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    as: Form.Field,\n    panels: panels,\n    styled: true,\n    fluid: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n_s(ProfileSettingsAccordion, \"7iQqIkPBNziawSY9v0owIi4/EPM=\");\n_c = ProfileSettingsAccordion;\nexport default ProfileSettingsAccordion;\nvar _c;\n$RefreshReg$(_c, \"ProfileSettingsAccordion\");","map":{"version":3,"names":["React","useState","Accordion","Form","Button","FormCheckbox","jsxDEV","_jsxDEV","ProfileSettingsAccordion","userMe","setModalOpen","_s","oldPassword","setOldPassword","newPassword","setNewPassword","handleChangePassword","console","log","panels","key","title","content","children","Field","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","label","href","onClick","Group","widths","Input","fluid","type","value","onChange","e","target","as","styled","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/TheaterScheduleProject-main/schedule-ui/src/components/profile/ProfileSettingsAccordion.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Accordion, Form, Button, FormCheckbox } from 'semantic-ui-react';\n\nfunction ProfileSettingsAccordion({ userMe, setModalOpen }) {\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n\n  const handleChangePassword = () => {\n    // Здесь добавьте код для отправки запроса на сервер для изменения пароля\n    // Используйте переменные oldPassword и newPassword для получения значений полей\n    console.log('Old Password:', oldPassword);\n    console.log('New Password:', newPassword);\n  };\n\n  const panels = [\n    {\n      key: 'privacy',\n      title: 'Настройки приватности',\n      content: {\n        content: (\n          <Form>\n            <Form.Field>\n              <label>Email</label>\n              <input placeholder='' />\n            </Form.Field>\n            <Form.Field>\n              <FormCheckbox label='Присылать уведомления по Email' />\n            </Form.Field>\n            <Form.Field>\n              <label>Номер телефона</label>\n              <input placeholder='' />\n            </Form.Field>\n            <Form.Field>\n              <a href=\"#\" onClick={() => setModalOpen(true)}>Изменение пароля</a>\n            </Form.Field>\n            <Form.Field>\n              {/* Форма для изменения пароля */}\n              {setModalOpen && (\n                <Form.Group widths='equal'>\n                  <Form.Input\n                    fluid\n                    label='Старый пароль'\n                    type='password'\n                    value={oldPassword}\n                    onChange={(e) => setOldPassword(e.target.value)}\n                  />\n                  <Form.Input\n                    fluid\n                    label='Новый пароль'\n                    type='password'\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                  />\n                </Form.Group>\n              )}\n            </Form.Field>\n            <Button onClick={handleChangePassword}>Изменить пароль</Button>\n            <Button>Применить</Button>\n          </Form>\n        ),\n      },\n    },\n  ];  \n\n  return <Accordion as={Form.Field} panels={panels} styled fluid />;\n}\n\nexport default ProfileSettingsAccordion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}