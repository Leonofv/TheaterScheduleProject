{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/account/AccountSettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { orderApi } from '../misc/OrderApi';\nimport { handleLogError } from '../misc/Helpers';\nimport AccountSettingsTab from './AccountSettingsTab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountSettingsPage() {\n  _s();\n  const Auth = useAuth();\n  const user = Auth.getUser();\n  const handlePasswordChange = (e, {\n    name,\n    value\n  }) => {\n    if (name === 'currentPassword') {\n      setCurrentPassword(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    }\n  };\n  const handlePasswordApply = () => {\n    setModalOpen(false);\n    setCurrentPassword('');\n    setNewPassword('');\n  };\n  const handleUpdateUser = async username => {\n    try {\n      await orderApi.updateUser(user, username);\n      handleGetUserMe();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  const handleGetUserMe = async () => {\n    try {\n      const response = await orderApi.getUserMe(user);\n      setUserMe(response.data);\n    } catch (error) {\n      handleLogError(error);\n    } finally {}\n  };\n  const handleToggleUserEmail = async (username, isActive) => {\n    try {\n      await orderApi.toggleUserEmail(user, username, isActive);\n      handleGetUserMe();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  if (!Auth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(AccountSettingsTab, {\n      handleGetUserMe: handleGetUserMe,\n      handleUpdateUser: handleUpdateUser,\n      handlePasswordChange: handlePasswordChange,\n      handlePasswordApply: handlePasswordApply,\n      handleToggleUserEmail: handleToggleUserEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountSettingsPage, \"6TaMl2pNGHhCVMDTZpQDk0wbLyA=\", false, function () {\n  return [useAuth];\n});\n_c = AccountSettingsPage;\nexport default AccountSettingsPage;\nvar _c;\n$RefreshReg$(_c, \"AccountSettingsPage\");","map":{"version":3,"names":["React","useState","Navigate","Container","useAuth","orderApi","handleLogError","AccountSettingsTab","jsxDEV","_jsxDEV","AccountSettingsPage","_s","Auth","user","getUser","handlePasswordChange","e","name","value","setCurrentPassword","setNewPassword","handlePasswordApply","setModalOpen","handleUpdateUser","username","updateUser","handleGetUserMe","error","response","getUserMe","setUserMe","data","handleToggleUserEmail","isActive","toggleUserEmail","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/account/AccountSettingsPage.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport { useAuth } from '../context/AuthContext'\nimport { orderApi } from '../misc/OrderApi'\nimport { handleLogError } from '../misc/Helpers'\nimport AccountSettingsTab from './AccountSettingsTab'\n\nfunction AccountSettingsPage() {\n  \n  const Auth = useAuth()\n  const user = Auth.getUser()\n\n  const handlePasswordChange = (e, { name, value }) => {\n    if (name === 'currentPassword') {\n      setCurrentPassword(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    }\n  };\n\n  const handlePasswordApply = () => {\n    setModalOpen(false);\n    setCurrentPassword('');\n    setNewPassword('');\n  };\n\n  const handleUpdateUser = async (username) => {\n    try {\n      await orderApi.updateUser(user, username)\n      handleGetUserMe()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  const handleGetUserMe = async () => {\n    try {\n      const response = await orderApi.getUserMe(user)\n      setUserMe(response.data)\n    } catch (error) {\n      handleLogError(error)\n    } finally {\n    }\n  }\n\n  const handleToggleUserEmail = async (username, isActive) => {\n    try {\n      await orderApi.toggleUserEmail(user, username, isActive)\n      handleGetUserMe()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  if (!Auth) {\n    return <Navigate to='/login' />\n  }\n\n  return (\n    <Container>\n      <AccountSettingsTab\n        handleGetUserMe={handleGetUserMe}\n        handleUpdateUser={handleUpdateUser}\n        handlePasswordChange={handlePasswordChange}\n        handlePasswordApply={handlePasswordApply}\n        handleToggleUserEmail={handleToggleUserEmail}\n      />\n    </Container>\n  )\n}\n\nexport default AccountSettingsPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,kBAAkB,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;EACtB,MAAMS,IAAI,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC;EAE3B,MAAMC,oBAAoB,GAAGA,CAACC,CAAC,EAAE;IAAEC,IAAI;IAAEC;EAAM,CAAC,KAAK;IACnD,IAAID,IAAI,KAAK,iBAAiB,EAAE;MAC9BE,kBAAkB,CAACD,KAAK,CAAC;IAC3B,CAAC,MAAM,IAAID,IAAI,KAAK,aAAa,EAAE;MACjCG,cAAc,CAACF,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCC,YAAY,CAAC,KAAK,CAAC;IACnBH,kBAAkB,CAAC,EAAE,CAAC;IACtBC,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,MAAMnB,QAAQ,CAACoB,UAAU,CAACZ,IAAI,EAAEW,QAAQ,CAAC;MACzCE,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdrB,cAAc,CAACqB,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMD,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMvB,QAAQ,CAACwB,SAAS,CAAChB,IAAI,CAAC;MAC/CiB,SAAS,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdrB,cAAc,CAACqB,KAAK,CAAC;IACvB,CAAC,SAAS,CACV;EACF,CAAC;EAED,MAAMK,qBAAqB,GAAG,MAAAA,CAAOR,QAAQ,EAAES,QAAQ,KAAK;IAC1D,IAAI;MACF,MAAM5B,QAAQ,CAAC6B,eAAe,CAACrB,IAAI,EAAEW,QAAQ,EAAES,QAAQ,CAAC;MACxDP,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdrB,cAAc,CAACqB,KAAK,CAAC;IACvB;EACF,CAAC;EAED,IAAI,CAACf,IAAI,EAAE;IACT,oBAAOH,OAAA,CAACP,QAAQ;MAACiC,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,oBACE9B,OAAA,CAACN,SAAS;IAAAqC,QAAA,eACR/B,OAAA,CAACF,kBAAkB;MACjBmB,eAAe,EAAEA,eAAgB;MACjCH,gBAAgB,EAAEA,gBAAiB;MACnCR,oBAAoB,EAAEA,oBAAqB;MAC3CM,mBAAmB,EAAEA,mBAAoB;MACzCW,qBAAqB,EAAEA;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAAC5B,EAAA,CA9DQD,mBAAmB;EAAA,QAEbN,OAAO;AAAA;AAAAqC,EAAA,GAFb/B,mBAAmB;AAgE5B,eAAeA,mBAAmB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}