{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/admin/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport AdminTab from './AdminTab';\nimport { orderApi } from '../misc/OrderApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const Auth = useAuth();\n  const user = Auth.getUser();\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [orderDescription, setOrderDescription] = useState('');\n  const [orderTextSearch, setOrderTextSearch] = useState('');\n  const [userUsernameSearch, setUserUsernameSearch] = useState('');\n  const [isAdmin, setIsAdmin] = useState(true);\n  const [isUsersLoading, setIsUsersLoading] = useState(false);\n  const [isOrdersLoading, setIsOrdersLoading] = useState(false);\n  useEffect(() => {\n    setIsAdmin(user.data.rol[0] === 'ADMIN');\n    handleGetUsers();\n    handleGetOrders();\n  }, []);\n  const handleInputChange = (e, {\n    name,\n    value\n  }) => {\n    if (name === 'userUsernameSearch') {\n      setUserUsernameSearch(value);\n    } else if (name === 'orderDescription') {\n      setOrderDescription(value);\n    } else if (name === 'orderTextSearch') {\n      setOrderTextSearch(value);\n    }\n  };\n  const handleGetUsers = async () => {\n    setIsUsersLoading(true);\n    try {\n      const response = await orderApi.getUsers(user);\n      setUsers(response.data);\n    } catch (error) {\n      handleLogError(error);\n    } finally {\n      setIsUsersLoading(false);\n    }\n  };\n  const handleDeleteUser = async username => {\n    try {\n      await orderApi.deleteUser(user, username);\n      handleGetUsers();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  const handleSearchUser = async () => {\n    const username = userUsernameSearch;\n    try {\n      const response = await orderApi.getUsers(user, username);\n      const data = response.data;\n      const users = data instanceof Array ? data : [data];\n      setUsers(users);\n    } catch (error) {\n      handleLogError(error);\n      setUsers([]);\n    }\n  };\n  const handleGetOrders = async () => {\n    setIsOrdersLoading(true);\n    try {\n      const response = await orderApi.getOrders(user);\n      setOrders(response.data);\n    } catch (error) {\n      handleLogError(error);\n    } finally {\n      setIsOrdersLoading(false);\n    }\n  };\n  const handleDeleteOrder = async isbn => {\n    try {\n      await orderApi.deleteOrder(user, isbn);\n      handleGetOrders();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  const handleCreateOrder = async () => {\n    let description = orderDescription.trim();\n    if (!description) {\n      return;\n    }\n    const order = {\n      description\n    };\n    try {\n      await orderApi.createOrder(user, order);\n      handleGetOrders();\n      setOrderDescription('');\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  const handleSearchOrder = async () => {\n    const text = orderTextSearch;\n    try {\n      const response = await orderApi.getOrders(user, text);\n      setOrders(response.data);\n    } catch (error) {\n      handleLogError(error);\n      setOrders([]);\n    }\n  };\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(AdminTab, {\n      isUsersLoading: isUsersLoading,\n      users: users,\n      userUsernameSearch: userUsernameSearch,\n      handleDeleteUser: handleDeleteUser,\n      handleSearchUser: handleSearchUser,\n      isOrdersLoading: isOrdersLoading,\n      orders: orders,\n      orderDescription: orderDescription,\n      orderTextSearch: orderTextSearch,\n      handleCreateOrder: handleCreateOrder,\n      handleDeleteOrder: handleDeleteOrder,\n      handleSearchOrder: handleSearchOrder,\n      handleInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"GKph9p3ibvcqAmRkmvXq/kzKSmc=\", false, function () {\n  return [useAuth];\n});\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","Container","useAuth","AdminTab","orderApi","handleLogError","jsxDEV","_jsxDEV","AdminPage","_s","Auth","user","getUser","users","setUsers","orders","setOrders","orderDescription","setOrderDescription","orderTextSearch","setOrderTextSearch","userUsernameSearch","setUserUsernameSearch","isAdmin","setIsAdmin","isUsersLoading","setIsUsersLoading","isOrdersLoading","setIsOrdersLoading","data","rol","handleGetUsers","handleGetOrders","handleInputChange","e","name","value","response","getUsers","error","handleDeleteUser","username","deleteUser","handleSearchUser","Array","getOrders","handleDeleteOrder","isbn","deleteOrder","handleCreateOrder","description","trim","order","createOrder","handleSearchOrder","text","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/admin/AdminPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport { useAuth } from '../context/AuthContext'\nimport AdminTab from './AdminTab'\nimport { orderApi } from '../misc/OrderApi'\nimport { handleLogError } from '../misc/Helpers'\n\nfunction AdminPage() {\n  const Auth = useAuth()\n  const user = Auth.getUser()\n\n  const [users, setUsers] = useState([])\n  const [orders, setOrders] = useState([])\n  const [orderDescription, setOrderDescription] = useState('')\n  const [orderTextSearch, setOrderTextSearch] = useState('')\n  const [userUsernameSearch, setUserUsernameSearch] = useState('')\n  const [isAdmin, setIsAdmin] = useState(true)\n  const [isUsersLoading, setIsUsersLoading] = useState(false)\n  const [isOrdersLoading, setIsOrdersLoading] = useState(false)\n\n  useEffect(() => {\n    setIsAdmin(user.data.rol[0] === 'ADMIN')\n    handleGetUsers()\n    handleGetOrders()\n  }, [])\n\n  const handleInputChange = (e, { name, value }) => {\n    if (name === 'userUsernameSearch') {\n      setUserUsernameSearch(value)\n    } else if (name === 'orderDescription') {\n      setOrderDescription(value)\n    } else if (name === 'orderTextSearch') {\n      setOrderTextSearch(value)\n    }\n  }\n\n  const handleGetUsers = async () => {\n    setIsUsersLoading(true)\n    try {\n      const response = await orderApi.getUsers(user)\n      setUsers(response.data)\n    } catch (error) {\n      handleLogError(error)\n    } finally {\n      setIsUsersLoading(false)\n    }\n  }\n\n  const handleDeleteUser = async (username) => {\n    try {\n      await orderApi.deleteUser(user, username)\n      handleGetUsers()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  const handleSearchUser = async () => {\n    const username = userUsernameSearch\n    try {\n      const response = await orderApi.getUsers(user, username)\n      const data = response.data\n      const users = data instanceof Array ? data : [data]\n      setUsers(users)\n    } catch (error) {\n      handleLogError(error)\n      setUsers([])\n    }\n  }\n\n  const handleGetOrders = async () => {\n    setIsOrdersLoading(true)\n    try {\n      const response = await orderApi.getOrders(user)\n      setOrders(response.data)\n    } catch (error) {\n      handleLogError(error)\n    } finally {\n      setIsOrdersLoading(false)\n    }\n  }\n\n  const handleDeleteOrder = async (isbn) => {\n    try {\n      await orderApi.deleteOrder(user, isbn)\n      handleGetOrders()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  const handleCreateOrder = async () => {\n    let description = orderDescription.trim()\n    if (!description) {\n      return\n    }\n\n    const order = { description }\n    try {\n      await orderApi.createOrder(user, order)\n      handleGetOrders()\n      setOrderDescription('')\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  const handleSearchOrder = async () => {\n    const text = orderTextSearch\n    try {\n      const response = await orderApi.getOrders(user, text)\n      setOrders(response.data)\n    } catch (error) {\n      handleLogError(error)\n      setOrders([])\n    }\n  }\n\n  if (!isAdmin) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <Container>\n      <AdminTab\n        isUsersLoading={isUsersLoading}\n        users={users}\n        userUsernameSearch={userUsernameSearch}\n        handleDeleteUser={handleDeleteUser}\n        handleSearchUser={handleSearchUser}\n        isOrdersLoading={isOrdersLoading}\n        orders={orders}\n        orderDescription={orderDescription}\n        orderTextSearch={orderTextSearch}\n        handleCreateOrder={handleCreateOrder}\n        handleDeleteOrder={handleDeleteOrder}\n        handleSearchOrder={handleSearchOrder}\n        handleInputChange={handleInputChange}\n      />\n    </Container>\n  )\n}\n\nexport default AdminPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}