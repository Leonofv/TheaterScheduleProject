{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/account/AccountSettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport { useAuth } from '../context/AuthContext';\nimport { orderApi } from '../misc/OrderApi';\nimport { handleLogError } from '../misc/Helpers';\nimport AccountSettingsTab from './AccountSettingsTab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountSettingsPage() {\n  _s();\n  const Auth = useAuth();\n  const user = Auth.getUser();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [userEmailStatus, setUserEmailStatus] = useState({});\n  const handlePasswordChange = (e, {\n    name,\n    value\n  }) => {\n    if (name === 'currentPassword') {\n      setCurrentPassword(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    }\n  };\n  const handlePasswordApply = () => {\n    setModalOpen(false);\n    setCurrentPassword('');\n    setNewPassword('');\n  };\n  const handleUpdateUser = async username => {\n    try {\n      await orderApi.updateUser(user, username);\n      handleGetUserMe();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  const handleToggleUserEmail = async (username, isActive) => {\n    try {\n      await orderApi.toggleUserEmail(user, username, isActive);\n      handleGetUserMe();\n    } catch (error) {\n      handleLogError(error);\n    }\n  };\n  if (!Auth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(AccountSettingsTab, {\n      handleGetUserMe: handleGetUserMe,\n      handleUpdateUser: handleUpdateUser,\n      modalOpen: modalOpen,\n      setModalOpen: setModalOpen,\n      currentPassword: currentPassword,\n      newPassword: newPassword,\n      handlePasswordChange: handlePasswordChange,\n      handlePasswordApply: handlePasswordApply,\n      handleToggleUserEmail: handleToggleUserEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountSettingsPage, \"7SFmtcEGxVu2ijwiDqIkDDSWhCw=\", false, function () {\n  return [useAuth];\n});\n_c = AccountSettingsPage;\nexport default AccountSettingsPage;\nvar _c;\n$RefreshReg$(_c, \"AccountSettingsPage\");","map":{"version":3,"names":["React","useState","Navigate","Container","useAuth","orderApi","handleLogError","AccountSettingsTab","jsxDEV","_jsxDEV","AccountSettingsPage","_s","Auth","user","getUser","modalOpen","setModalOpen","currentPassword","setCurrentPassword","newPassword","setNewPassword","userEmailStatus","setUserEmailStatus","handlePasswordChange","e","name","value","handlePasswordApply","handleUpdateUser","username","updateUser","handleGetUserMe","error","handleToggleUserEmail","isActive","toggleUserEmail","to","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/leonofv/Downloads/TheaterScheduleProject-main/schedule-ui/src/components/account/AccountSettingsPage.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport { useAuth } from '../context/AuthContext'\nimport { orderApi } from '../misc/OrderApi'\nimport { handleLogError } from '../misc/Helpers'\nimport AccountSettingsTab from './AccountSettingsTab'\n\nfunction AccountSettingsPage() {\n  \n  const Auth = useAuth()\n  const user = Auth.getUser()\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [userEmailStatus, setUserEmailStatus] = useState({});\n\n  const handlePasswordChange = (e, { name, value }) => {\n    if (name === 'currentPassword') {\n      setCurrentPassword(value);\n    } else if (name === 'newPassword') {\n      setNewPassword(value);\n    }\n  };\n\n  const handlePasswordApply = () => {\n    setModalOpen(false);\n    setCurrentPassword('');\n    setNewPassword('');\n  };\n\n  const handleUpdateUser = async (username) => {\n    try {\n      await orderApi.updateUser(user, username)\n      handleGetUserMe()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n\n\n  const handleToggleUserEmail = async (username, isActive) => {\n    try {\n      await orderApi.toggleUserEmail(user, username, isActive)\n      handleGetUserMe()\n    } catch (error) {\n      handleLogError(error)\n    }\n  }\n\n  if (!Auth) {\n    return <Navigate to='/login' />\n  }\n\n  return (\n    <Container>\n      <AccountSettingsTab\n        handleGetUserMe={handleGetUserMe}\n        handleUpdateUser={handleUpdateUser}\n        modalOpen={modalOpen}\n        setModalOpen={setModalOpen}\n        currentPassword={currentPassword}\n        newPassword={newPassword}\n        handlePasswordChange={handlePasswordChange}\n        handlePasswordApply={handlePasswordApply}\n        handleToggleUserEmail={handleToggleUserEmail}\n      />\n    </Container>\n  )\n}\n\nexport default AccountSettingsPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}